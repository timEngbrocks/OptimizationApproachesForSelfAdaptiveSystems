@ARTICLE{1160055,  
  author={Kephart, J.O. and Chess, D.M.},  
  journal={Computer},   
  title={The vision of autonomic computing},   
  year={2003},  
  volume={36},  
  number={1},  
  pages={41-50},  
  doi={10.1109/MC.2003.1160055}
}

@book{sasIntroduction,
  title     = {An Introduction to Self-adaptive Systems: A Contemporary Software Engineering Perspective},
  author    = {Danny Weyns},
  year      = 2020,
  publisher = {Wiley},
  location  = {Hoboken, New Jersey},
  isbn      = {978-1119574941},
}

@Inbook{Cheng2009,
  author="Cheng, Betty H. C.
    and de Lemos, Rog{\'e}rio
    and Giese, Holger
    and Inverardi, Paola
    and Magee, Jeff
    and Andersson, Jesper
    and Becker, Basil
    and Bencomo, Nelly
    and Brun, Yuriy
    and Cukic, Bojan
    and Di Marzo Serugendo, Giovanna
    and Dustdar, Schahram
    and Finkelstein, Anthony
    and Gacek, Cristina
    and Geihs, Kurt
    and Grassi, Vincenzo
    and Karsai, Gabor
    and Kienle, Holger M.
    and Kramer, Jeff
    and Litoiu, Marin
    and Malek, Sam
    and Mirandola, Raffaela
    and M{\"u}ller, Hausi A.
    and Park, Sooyong
    and Shaw, Mary
    and Tichy, Matthias
    and Tivoli, Massimo
    and Weyns, Danny
    and Whittle, Jon",
  editor="Cheng, Betty H. C.
    and de Lemos, Rog{\'e}rio
    and Giese, Holger
    and Inverardi, Paola
    and Magee, Jeff",
  title="Software Engineering for Self-Adaptive Systems: A Research Roadmap",
  bookTitle="Software Engineering for Self-Adaptive Systems",
  year="2009",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="1--26",
  abstract="The goal of this roadmap paper is to summarize the state-of-the-art and to identify critical challenges for the systematic software engineering of self-adaptive systems. The paper is partitioned into four parts, one for each of the identified essential views of self-adaptation: modelling dimensions, requirements, engineering, and assurances. For each view, we present the state-of-the-art and the challenges that our community must address. This roadmap paper is a result of the Dagstuhl Seminar 08031 on ``Software Engineering for Self-Adaptive Systems,'' which took place in January 2008.",
  isbn="978-3-642-02161-9",
  doi="10.1007/978-3-642-02161-9_1",
  url="https://doi.org/10.1007/978-3-642-02161-9_1"
}

@Inbook{deLemos2013,
author="de Lemos, Rog{\'e}rio
    and Giese, Holger
    and M{\"u}ller, Hausi A.
    and Shaw, Mary
    and Andersson, Jesper
    and Litoiu, Marin
    and Schmerl, Bradley
    and Tamura, Gabriel
    and Villegas, Norha M.
    and Vogel, Thomas
    and Weyns, Danny
    and Baresi, Luciano
    and Becker, Basil
    and Bencomo, Nelly
    and Brun, Yuriy
    and Cukic, Bojan
    and Desmarais, Ron
    and Dustdar, Schahram
    and Engels, Gregor
    and Geihs, Kurt
    and G{\"o}schka, Karl M.
    and Gorla, Alessandra
    and Grassi, Vincenzo
    and Inverardi, Paola
    and Karsai, Gabor
    and Kramer, Jeff
    and Lopes, Ant{\'o}nia
    and Magee, Jeff
    and Malek, Sam
    and Mankovskii, Serge
    and Mirandola, Raffaela
    and Mylopoulos, John
    and Nierstrasz, Oscar
    and Pezz{\`e}, Mauro
    and Prehofer, Christian
    and Sch{\"a}fer, Wilhelm
    and Schlichting, Rick
    and Smith, Dennis B.
    and Sousa, Jo{\~a}o Pedro
    and Tahvildari, Ladan
    and Wong, Kenny
    and Wuttke, Jochen",
  editor="de Lemos, Rog{\'e}rio
    and Giese, Holger
    and M{\"u}ller, Hausi A.
    and Shaw, Mary",
  title="Software Engineering for Self-Adaptive Systems: A Second Research Roadmap",
  bookTitle="Software Engineering for Self-Adaptive Systems II: International Seminar, Dagstuhl Castle, Germany, October 24-29, 2010 Revised Selected and Invited Papers",
  year="2013",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="1--32",
  abstract="The goal of this roadmap paper is to summarize the state-of-the-art and identify research challenges when developing, deploying and managing self-adaptive software systems. Instead of dealing with a wide range of topics associated with the field, we focus on four essential topics of self-adaptation: design space for self-adaptive solutions, software engineering processes for self-adaptive systems, from centralized to decentralized control, and practical run-time verification {\&} validation for self-adaptive systems. For each topic, we present an overview, suggest future directions, and focus on selected challenges. This paper complements and extends a previous roadmap on software engineering for self-adaptive systems published in 2009 covering a different set of topics, and reflecting in part on the previous paper. This roadmap is one of the many results of the Dagstuhl Seminar 10431 on Software Engineering for Self-Adaptive Systems, which took place in October 2010.",
  isbn="978-3-642-35813-5",
  doi="10.1007/978-3-642-35813-5_1",
  url="https://doi.org/10.1007/978-3-642-35813-5_1"
}

@INPROCEEDINGS{6224395,  
  author={Weyns, Danny and Iftikhar, M. Usman and Malek, Sam and Andersson, Jesper},  
  booktitle={2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},   
  title={Claims and supporting evidence for self-adaptive systems: A literature study},   
  year={2012}, 
  volume={},  
  number={},  
  pages={89-98},  
  doi={10.1109/SEAMS.2012.6224395}
}

@article{10.1145/1516533.1516538,
  author = {Salehie, Mazeiar and Tahvildari, Ladan},
  title = {Self-Adaptive Software: Landscape and Research Challenges},
  year = {2009},
  issue_date = {May 2009},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {4},
  number = {2},
  issn = {1556-4665},
  url = {https://doi.org/10.1145/1516533.1516538},
  doi = {10.1145/1516533.1516538},
  abstract = {Software systems dealing with distributed applications in changing environments normally require human supervision to continue operation in all conditions. These (re-)configuring, troubleshooting, and in general maintenance tasks lead to costly and time-consuming procedures during the operating phase. These problems are primarily due to the open-loop structure often followed in software development. Therefore, there is a high demand for management complexity reduction, management automation, robustness, and achieving all of the desired quality requirements within a reasonable cost and time range during operation. Self-adaptive software is a response to these demands; it is a closed-loop system with a feedback loop aiming to adjust itself to changes during its operation. These changes may stem from the software system's self (internal causes, e.g., failure) or context (external events, e.g., increasing requests from users). Such a system is required to monitor itself and its context, detect significant changes, decide how to react, and act to execute such decisions. These processes depend on adaptation properties (called self-* properties), domain characteristics (context information or models), and preferences of stakeholders. Noting these requirements, it is widely believed that new models and frameworks are needed to design self-adaptive software. This survey article presents a taxonomy, based on concerns of adaptation, that is, how, what, when and where, towards providing a unified view of this emerging area. Moreover, as adaptive systems are encountered in many disciplines, it is imperative to learn from the theories and models developed in these other areas. This survey article presents a landscape of research in self-adaptive software by highlighting relevant disciplines and some prominent research projects. This landscape helps to identify the underlying research gaps and elaborates on the corresponding challenges.},
  journal = {ACM Trans. Auton. Adapt. Syst.},
  month = may,
  articleno = {14},
  numpages = {42},
  keywords = {self-adaptive software, survey, Adaptation processes, self-properties, research challenges}
}

@ARTICLE{9249012,  
  author={Saputri, Theresia Ratih Dewi and Lee, Seok-Won},  
  journal={IEEE Access},   
  title={The Application of Machine Learning in Self-Adaptive Systems: A Systematic Literature Review},   
  year={2020},  
  volume={8},  
  number={},  
  pages={205948-205967},  
  doi={10.1109/ACCESS.2020.3036037}
}

@INPROCEEDINGS{7573157,  
  author={Krupitzer, Christian and Roth, Felix Maximilian and Pfannem√ºller, Martin and Becker, Christian},  
  booktitle={2016 IEEE International Conference on Autonomic Computing (ICAC)},   
  title={Comparison of Approaches for Self-Improvement in Self-Adaptive Systems},   
  year={2016},  
  volume={},  
  number={},  
  pages={308-314},  
  doi={10.1109/ICAC.2016.18}
}

@article{KRUPITZER2015184,
  title = {A survey on engineering approaches for self-adaptive systems},
  journal = {Pervasive and Mobile Computing},
  volume = {17},
  pages = {184-206},
  year = {2015},
  note = {10 years of Pervasive Computing' In Honor of Chatschik Bisdikian},
  issn = {1574-1192},
  doi = {https://doi.org/10.1016/j.pmcj.2014.09.009},
  url = {https://www.sciencedirect.com/science/article/pii/S157411921400162X},
  author = {Christian Krupitzer and Felix Maximilian Roth and Sebastian VanSyckel and Gregor Schiele and Christian Becker},
  keywords = {Taxonomy, Self-adaptation, Survey, Self-adaptive systems, Context adaptation},
  abstract = {The complexity of information systems is increasing in recent years, leading to increased effort for maintenance and configuration. Self-adaptive systems (SASs) address this issue. Due to new computing trends, such as pervasive computing, miniaturization of IT leads to mobile devices with the emerging need for context adaptation. Therefore, it is beneficial that devices are able to adapt context. Hence, we propose to extend the definition of SASs and include context adaptation. This paper presents a taxonomy of self-adaptation and a survey on engineering SASs. Based on the taxonomy and the survey, we motivate a new perspective on SAS including context adaptation.}
}

@INPROCEEDINGS{8599527,
  author={Raibulet, Claudia},
  booktitle={2018 IEEE 3rd International Workshops on Foundations and Applications of Self* Systems (FAS*W)}, 
  title={Towards a Taxonomy for the Evaluation of Self-* Software}, 
  year={2018},
  volume={},
  number={},
  pages={22-23},
  doi={10.1109/FAS-W.2018.00020}
}

@INPROCEEDINGS{5298493,  
  author={Berns, Andrew and Ghosh, Sukumar},  
  booktitle={2009 Third IEEE International Conference on Self-Adaptive and Self-Organizing Systems},   
  title={Dissecting Self-* Properties},   
  year={2009},  
  volume={},  
  number={},  
  pages={10-19},  
  doi={10.1109/SASO.2009.25}
}

@inproceedings{10.1145/1882291.1882296,
  author = {Elkhodary, Ahmed and Esfahani, Naeem and Malek, Sam},
  title = {FUSION: A Framework for Engineering Self-Tuning Self-Adaptive Software Systems},
  year = {2010},
  isbn = {9781605587912},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/1882291.1882296},
  doi = {10.1145/1882291.1882296},
  abstract = {Self-adaptive software systems are capable of adjusting their behavior at run-time to achieve certain objectives. Such systems typically employ analytical models specified at design-time to assess their characteristics at run-time and make the appropriate adaptation decisions. However, prior to system's deployment, engineers often cannot foresee the changes in the environment, requirements, and system's operational profile. Therefore, any analytical model used in this setting relies on underlying assumptions that if not held at run-time make the analysis and hence the adaptation decisions inaccurate. We present and evaluate FeatUre-oriented Self-adaptatION (FUSION) framework, which aims to solve this problem by learning the impact of adaptation decisions on the system's goals. The framework (1) allows for automatic online fine-tuning of the adaptation logic to unanticipated conditions, (2) reduces the upfront effort required for building such systems, and (3) makes the run-time analysis of such systems very efficient.},
  booktitle = {Proceedings of the Eighteenth ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  pages = {7‚Äì16},
  numpages = {10},
  keywords = {learning, feature-orientation, qos analysis, self-adaptation},
  location = {Santa Fe, New Mexico, USA},
  series = {FSE '10}
}

@inproceedings{tesauro2004multi,
  title={A multi-agent systems approach to autonomic computing},
  author={Tesauro, Gerald and Chess, David M and Walsh, William E and Das, Rajarshi and Segal, Alla and Whalley, Ian and Kephart, Jeffrey O and White, Steve R},
  booktitle={Proceedings of the Third International Joint Conference on Autonomous Agents and Multiagent Systems-Volume 1},
  pages={464--471},
  year={2004},
  organization={Citeseer}
}

@INPROCEEDINGS{6606552,  
  author={Sykes, Daniel and Corapi, Domenico and Magee, Jeff and Kramer, Jeff and Russo, Alessandra and Inoue, Katsumi},  
  booktitle={2013 35th International Conference on Software Engineering (ICSE)},   
  title={Learning revised models for planning in adaptive systems},   
  year={2013},  
  volume={},  
  number={},  
  pages={63-71},  
  doi={10.1109/ICSE.2013.6606552}
}

@article{GRZONKA20181106,
  title = {Using a multi-agent system and artificial intelligence for monitoring and improving the cloud performance and security},
  journal = {Future Generation Computer Systems},
  volume = {86},
  pages = {1106-1117},
  year = {2018},
  issn = {0167-739X},
  doi = {https://doi.org/10.1016/j.future.2017.05.046},
  url = {https://www.sciencedirect.com/science/article/pii/S0167739X17310531},
  author = {Daniel Grzonka and Agnieszka Jak√≥bik and Joanna Ko≈Çodziej and Sabri Pllana},
  keywords = {Cloud computing, Cloud monitoring, Multi-agent systems, Cloud security, Genetic algorithms, Artificial neural networks, Independent batch scheduling},
  abstract = {Cloud Computing is one of the most intensively developed solutions for large-scale distributed processing. Effective use of such environments, management of their high complexity and ensuring appropriate levels of Quality of Service (QoS) require advanced monitoring systems. Such monitoring systems have to support the scalability, adaptability and reliability of Cloud. Most of existing monitoring systems do not incorporate any Artificial Intelligence (AI) algorithms for supporting the change inside the task stream or environment itself. They focus only on monitoring or enabling the control of the system as a part of a separated service. An effective monitoring system for the Cloud environment should gather information about all stages of tasks processing and should actively control the monitored environment. In this paper, we present a novel Multi-Agent System based Cloud Monitoring (MAS-CM) model that supports the performance and security of tasks gathering, scheduling and execution processes in large-scale service-oriented environments. Such models are explicitly designed to control the performance and security objectives of the environment. In our work, we focus on prevention of unauthorized task injection and modification, optimization of scheduling process and maximization of resource usage. We evaluate the effectiveness of MAS-CM empirically using an evolutionary driven implementation of Independent Batch Scheduler and FastFlow framework. The obtained results demonstrate the effectiveness of the proposed approach and the performance improvement.}
}

@article{DONASCIMENTO2017161,
  title = {FIoT: An agent-based framework for self-adaptive and self-organizing applications based on the Internet of Things},
  journal = {Information Sciences},
  volume = {378},
  pages = {161-176},
  year = {2017},
  issn = {0020-0255},
  doi = {https://doi.org/10.1016/j.ins.2016.10.031},
  url = {https://www.sciencedirect.com/science/article/pii/S0020025516313664},
  author = {Nathalia Moraes {do Nascimento} and Carlos Jos√© Pereira {de Lucena}},
  keywords = {Internet of things (IoT), Multi-agent system, Machine learning, Self-organizing, Self-adaptive, Quantified things},
  abstract = {Billions of resources, such as cars, clothes, household appliances and even food are being connected to the Internet forming the Internet of Things (IoT). Subsets of these resources can work together to create new self-regulating IoT applications such as smart health, smart communities and smart homes. However, several challenging issues need to be addressed before this vision of applications based on IoT concepts becomes a reality. Because many IoT applications will be distributed over a large number of interacting devices, centralized control will not be possible and so open problems will need to be solved that relate to building locally operating self-organizing and self-adaptive systems. As an initial step in creating IoT applications with these features, this paper presents a Framework for IoT (FIoT). The approach is based on Multi-Agent Systems (MAS) and Machine Learning Techniques, such as neural networks and evolutionary algorithms. To illustrate the use of FIoT, the paper contains two different IoT applications: (i) Quantified Things and (ii) Smart traffic control. We show how flexible points of our framework are instantiated to generate these IoT application.}
}